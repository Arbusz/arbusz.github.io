<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on Arbus&#39;s Little Site</title>
    <link>https://arbusz.github.io/tags/development/</link>
    <description>Recent content in Development on Arbus&#39;s Little Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 May 2018 19:59:36 +0800</lastBuildDate>
    
	<atom:link href="https://arbusz.github.io/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go语言笔记－函数</title>
      <link>https://arbusz.github.io/2018/05/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sun, 20 May 2018 19:59:36 +0800</pubDate>
      
      <guid>https://arbusz.github.io/2018/05/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E5%87%BD%E6%95%B0/</guid>
      <description>#函数
定义 关键字func用于定义函数。 - 无须前置声明。 - 不支持命名嵌套类型（nested）。 - 不支持同名参数重载（overload）。 - 不支持默认参数。 - 支持不定长变参。 - 支持多返回值。 - 支持命名返回值。 - 支持命名函数和闭包。 函数属于第一类对象，具备相同签名的函数视作同一类型。 &amp;gt; 第一类对象指可在运行期间创建，可做函数参数或返回值，可存入变量的实体。
函数只能判断是否为nil,不支持其他比较。 从函数返回局部变量指针是安全的，编译器会通过逃逸分析来决定是否在堆上分配内存。
##参数 函数调用时，必须按照签名顺序传参，以_命名的参数也不能省略。 在参数列表里，相邻的同类型参数可以合并。
func test(x,y int,s string,_ bool) *int{ return nil } func main(){ test(1,2,&amp;quot;abc&amp;quot;)//error:not enough arguments in call to test }   形参是指函数定义中的参数，实参则是函数调用时所传递的参数。形参类似函数局部变量，而实参则是函数外部对象。
 在函数调用前，会为形参和返回值分配内存空间，并将实参拷贝给形参内存。
func test(x *int) { fmt.Printf(&amp;quot;pointer: %p,target: %v\n&amp;quot;, &amp;amp;x, x) //输出形参x的地址 } func main() { a := 100 p := &amp;amp;a fmt.</description>
    </item>
    
    <item>
      <title>Go语言笔记－表达式</title>
      <link>https://arbusz.github.io/2018/05/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Sun, 20 May 2018 19:45:45 +0800</pubDate>
      
      <guid>https://arbusz.github.io/2018/05/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go语言笔记－类型</title>
      <link>https://arbusz.github.io/2018/03/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Tue, 27 Mar 2018 19:24:27 +0800</pubDate>
      
      <guid>https://arbusz.github.io/2018/03/go%E8%AF%AD%E8%A8%80%E7%AC%94%E8%AE%B0%E7%B1%BB%E5%9E%8B/</guid>
      <description>&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>